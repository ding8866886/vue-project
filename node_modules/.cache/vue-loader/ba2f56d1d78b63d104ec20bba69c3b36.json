{"remainingRequest":"/home/xibao/Desktop/VUE/vue_test_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/xibao/Desktop/VUE/vue_test_project/src/components/Users.vue?vue&type=style&index=0&id=0a14fc75&lang=less&scoped=true&","dependencies":[{"path":"/home/xibao/Desktop/VUE/vue_test_project/src/components/Users.vue","mtime":1595917515026},{"path":"/home/xibao/Desktop/VUE/vue_test_project/node_modules/css-loader/dist/cjs.js","mtime":1595828252082},{"path":"/home/xibao/Desktop/VUE/vue_test_project/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1595828253116},{"path":"/home/xibao/Desktop/VUE/vue_test_project/node_modules/postcss-loader/src/index.js","mtime":1595828252672},{"path":"/home/xibao/Desktop/VUE/vue_test_project/node_modules/less-loader/dist/cjs.js","mtime":1595828252418},{"path":"/home/xibao/Desktop/VUE/vue_test_project/node_modules/cache-loader/dist/cjs.js","mtime":1595828251939},{"path":"/home/xibao/Desktop/VUE/vue_test_project/node_modules/vue-loader/lib/index.js","mtime":1595828253116}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmVsLWNhcmQgewogICAgbWFyZ2luLXRvcDogMTBweDsKfQo="},{"version":3,"sources":["Users.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyMA;AACA;AACA","file":"Users.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <!--面包屑导航-->\n        <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n            <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n            <el-breadcrumb-item>用户管理</el-breadcrumb-item>\n            <el-breadcrumb-item>用户列表</el-breadcrumb-item>\n        </el-breadcrumb>\n        <el-card class=\"box-card\">\n            <el-row :gutter=\"20\">\n                <el-col :span=\"7\">\n                    <el-input placeholder=\"请输入内容\" v-model=\"queryInfo.query\" clearable @clear=\"getUserList\">\n                        <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getUserList\"></el-button>\n                    </el-input>\n                </el-col>\n                <el-col :span=\"4\">\n                    <el-button type=\"primary\" @click=\"dialogVisible=true\">添加用户</el-button>\n                </el-col>\n            </el-row>\n            <el-table :data=\"userList\">\n                <el-table-column type=\"index\" label=\"#\"></el-table-column>\n                <el-table-column label=\"姓名\" prop=\"username\"></el-table-column>\n                <el-table-column label=\"邮箱\" prop=\"email\"></el-table-column>\n                <el-table-column label=\"电话\" prop=\"mobile\"></el-table-column>\n                <el-table-column label=\"角色\" prop=\"role_name\"></el-table-column>\n                <el-table-column label=\"状态\">\n                    <template slot-scope=\"scope\">\n                        <el-switch\n                                v-model=\"scope.row.mg_state\" @click=\"userStateChanged(scope.row)\"\n                                active-color=\"#13ce66\"\n                                inactive-color=\"#ff4949\">\n                        </el-switch>\n                    </template>\n                </el-table-column>\n                <el-table-column label=\"操作\" width=\"180px\">\n                    <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\"></el-button>\n                    <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\"></el-button>\n                    <el-tooltip class=\"item\" effect=\"dark\" content=\"分配角色\" placement=\"top-start\" :enterable=\"false\">\n                        <el-button type=\"warning\" icon=\"el-icon-setting\" size=\"mini\"></el-button>\n                    </el-tooltip>\n                </el-table-column>\n            </el-table>\n            <el-pagination\n                    @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\"\n                    :current-page=\"queryInfo.page_num\"\n                    :page-sizes=\"[1,3,5,10]\"\n                    :page-size=\"queryInfo.page_size\"\n                    layout=\"total, sizes, prev, pager, next, jumper\"\n                    :total=\"total\">\n            </el-pagination>\n        </el-card>\n        <el-dialog\n                title=\"添加用户\"\n                :visible.sync=\"dialogVisible\"\n                width=\"50%\" @close=\"addDialogClosed\">\n            <!-- 对话框主体区域 -->\n            <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"70px\">\n                <el-form-item label=\"用户名\" prop=\"username\">\n                    <el-input v-model=\"addForm.username\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"密码\" prop=\"password\">\n                    <el-input v-model=\"addForm.password\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"邮箱\" prop=\"email\">\n                    <el-input v-model=\"addForm.email\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"电话\" prop=\"mobile\">\n                    <el-input v-model=\"addForm.mobile\"></el-input>\n                </el-form-item>\n            </el-form>\n            <!-- 对话框底部区域 -->\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"dialogVisible = false\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"addUser\">确 定</el-button>\n            </span>\n        </el-dialog>\n    </div>\n\n</template>\n\n<script>\n    export default {\n        name: \"Users\",\n        data() {\n            //验证邮箱规则\n            var checkEmail = (rule, value, cb) => {\n                const regEmail = /^\\w+@\\w+(\\.\\w+)+$/\n                if (regEmail.test(value)) {\n                    return cb()\n                }\n                //返回一个错误提示\n                cb(new Error('请输入合法的邮箱'))\n            }\n            //验证手机号码的规则\n            var checkMobile = (rule, value, cb) => {\n                const regMobile = /^1[34578]\\d{9}$/\n                if (regMobile.test(value)) {\n                    return cb()\n                }\n                //返回一个错误提示\n                cb(new Error('请输入合法的手机号码'))\n            }\n            return {\n                //获取查询用户信息的参数\n                queryInfo: {\n                    query: '',\n                    page_num: 1,\n                    page_size: 1\n                },\n                //保存请求回来的用户列表数据\n                userList: [],\n                total: 0,\n                dialogVisible: false,\n                addForm: {\n                    username: '',\n                    password: '',\n                    email: '',\n                    mobile: ''\n                },\n                addFormRules: {\n                    username: [\n                        {required: true, message: '请输入用户名称', trigger: 'blur'},\n                        {\n                            min: 3,\n                            max: 10,\n                            message: '用户名在3~10个字符之间',\n                            trigger: 'blur'\n                        }\n                    ],\n                    password: [\n                        {required: true, message: '请输入密码', trigger: 'blur'},\n                        {\n                            min: 6,\n                            max: 15,\n                            message: '用户名在6~15个字符之间',\n                            trigger: 'blur'\n                        }\n                    ],\n                    email: [\n                        {required: true, message: '请输入邮箱', trigger: 'blur'},\n                        {validator: checkEmail, message: '邮箱格式不正确，请重新输入', trigger: 'blur'}\n                    ],\n                    mobile: [\n                        {required: true, message: '请输入手机号码', trigger: 'blur'},\n                        {validator: checkMobile, message: '手机号码不正确，请重新输入', trigger: 'blur'}\n                    ]\n                }\n            }\n        },\n        created() {\n            this.getUserList()\n        },\n        methods: {\n            async getUserList() {\n                const {data: res} = await this.$http.get('goods/users/', {params: this.queryInfo});\n                if (res.code !== 0)\n                    return this.$message.error('获取用户列表失败');\n                this.userList = res.data.users;\n                this.total = res.data.total;\n                console.log(res)\n            },\n            handleSizeChange(newSize) {\n                console.log(newSize);\n                this.queryInfo.page_size = newSize;\n                this.getUserList();\n            },\n            handleCurrentChange(current) {\n                this.queryInfo.page_num = current;\n                this.getUserList();\n            },\n            async userStateChanged(row) {\n                //发送请求进行状态修改\n                const {data: res} = await this.put(`user/${row.id}/state/${row.mg_state}`)\n                if (res.code !== 0) {\n                    row.mg_state = !row.mg_state\n                    return this.$message.error('修改状态失败')\n                }\n                this.$message.success('更新状态成功')\n            },\n            addDialogClosed() {\n                this.$refs.addFormRef.resetFields();\n            },\n            addUser() {\n                this.$refs.addFormRef.validate(async valid => {\n                    if (!valid) return this.$message.error('请填写完整用户信息')\n                    const {data: res} = await this.$http.post('users', this.addForm)\n                    if (res !== 0)\n                        return this.$message.error('添加用户失败')\n                    this.$message.success('添加用户成功')\n                    //关闭对话框\n                    this.dialogVisible = false\n                    //重新请求最新的数据\n                    this.getUserList()\n                })\n            }\n\n        }\n    }\n</script>\n\n<style lang=\"less\" scoped>\n    .el-card {\n        margin-top: 10px;\n    }\n</style>"]}]}